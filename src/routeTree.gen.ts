/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as Error404Import } from './routes/error/404'
import { Route as Error403Import } from './routes/error/403'
import { Route as DashboardLayoutImport } from './routes/dashboard/_layout'
import { Route as AuthLayoutImport } from './routes/auth/_layout'
import { Route as DashboardLayoutIndexImport } from './routes/dashboard/_layout/index'
import { Route as DashboardLayoutUsersIndexImport } from './routes/dashboard/_layout/users/index'
import { Route as DashboardLayoutRulesIndexImport } from './routes/dashboard/_layout/rules/index'
import { Route as DashboardLayoutProfileIndexImport } from './routes/dashboard/_layout/profile/index'
import { Route as DashboardLayoutNotificationsIndexImport } from './routes/dashboard/_layout/notifications/index'
import { Route as DashboardLayoutDevicesIndexImport } from './routes/dashboard/_layout/devices/index'
import { Route as AuthLayoutLoginIndexImport } from './routes/auth/_layout/login/index'

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')()
const AuthImport = createFileRoute('/auth')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const Error404Route = Error404Import.update({
  id: '/error/404',
  path: '/error/404',
  getParentRoute: () => rootRoute,
} as any)

const Error403Route = Error403Import.update({
  id: '/error/403',
  path: '/error/403',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardLayoutIndexRoute = DashboardLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutUsersIndexRoute = DashboardLayoutUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutRulesIndexRoute = DashboardLayoutRulesIndexImport.update({
  id: '/rules/',
  path: '/rules/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutProfileIndexRoute =
  DashboardLayoutProfileIndexImport.update({
    id: '/profile/',
    path: '/profile/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutNotificationsIndexRoute =
  DashboardLayoutNotificationsIndexImport.update({
    id: '/notifications/',
    path: '/notifications/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutDevicesIndexRoute =
  DashboardLayoutDevicesIndexImport.update({
    id: '/devices/',
    path: '/devices/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const AuthLayoutLoginIndexRoute = AuthLayoutLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_layout': {
      id: '/auth/_layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof AuthRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_layout': {
      id: '/dashboard/_layout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof DashboardRoute
    }
    '/error/403': {
      id: '/error/403'
      path: '/error/403'
      fullPath: '/error/403'
      preLoaderRoute: typeof Error403Import
      parentRoute: typeof rootRoute
    }
    '/error/404': {
      id: '/error/404'
      path: '/error/404'
      fullPath: '/error/404'
      preLoaderRoute: typeof Error404Import
      parentRoute: typeof rootRoute
    }
    '/dashboard/_layout/': {
      id: '/dashboard/_layout/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardLayoutIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/auth/_layout/login/': {
      id: '/auth/_layout/login/'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLayoutLoginIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/dashboard/_layout/devices/': {
      id: '/dashboard/_layout/devices/'
      path: '/devices'
      fullPath: '/dashboard/devices'
      preLoaderRoute: typeof DashboardLayoutDevicesIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/notifications/': {
      id: '/dashboard/_layout/notifications/'
      path: '/notifications'
      fullPath: '/dashboard/notifications'
      preLoaderRoute: typeof DashboardLayoutNotificationsIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/profile/': {
      id: '/dashboard/_layout/profile/'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardLayoutProfileIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/rules/': {
      id: '/dashboard/_layout/rules/'
      path: '/rules'
      fullPath: '/dashboard/rules'
      preLoaderRoute: typeof DashboardLayoutRulesIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/users/': {
      id: '/dashboard/_layout/users/'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardLayoutUsersIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthLayoutRouteChildren {
  AuthLayoutLoginIndexRoute: typeof AuthLayoutLoginIndexRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutLoginIndexRoute: AuthLayoutLoginIndexRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface AuthRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardLayoutRouteChildren {
  DashboardLayoutIndexRoute: typeof DashboardLayoutIndexRoute
  DashboardLayoutDevicesIndexRoute: typeof DashboardLayoutDevicesIndexRoute
  DashboardLayoutNotificationsIndexRoute: typeof DashboardLayoutNotificationsIndexRoute
  DashboardLayoutProfileIndexRoute: typeof DashboardLayoutProfileIndexRoute
  DashboardLayoutRulesIndexRoute: typeof DashboardLayoutRulesIndexRoute
  DashboardLayoutUsersIndexRoute: typeof DashboardLayoutUsersIndexRoute
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardLayoutIndexRoute: DashboardLayoutIndexRoute,
  DashboardLayoutDevicesIndexRoute: DashboardLayoutDevicesIndexRoute,
  DashboardLayoutNotificationsIndexRoute:
    DashboardLayoutNotificationsIndexRoute,
  DashboardLayoutProfileIndexRoute: DashboardLayoutProfileIndexRoute,
  DashboardLayoutRulesIndexRoute: DashboardLayoutRulesIndexRoute,
  DashboardLayoutUsersIndexRoute: DashboardLayoutUsersIndexRoute,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren,
)

interface DashboardRouteChildren {
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthLayoutRouteWithChildren
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/error/403': typeof Error403Route
  '/error/404': typeof Error404Route
  '/dashboard/': typeof DashboardLayoutIndexRoute
  '/auth/login': typeof AuthLayoutLoginIndexRoute
  '/dashboard/devices': typeof DashboardLayoutDevicesIndexRoute
  '/dashboard/notifications': typeof DashboardLayoutNotificationsIndexRoute
  '/dashboard/profile': typeof DashboardLayoutProfileIndexRoute
  '/dashboard/rules': typeof DashboardLayoutRulesIndexRoute
  '/dashboard/users': typeof DashboardLayoutUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthLayoutRouteWithChildren
  '/dashboard': typeof DashboardLayoutIndexRoute
  '/error/403': typeof Error403Route
  '/error/404': typeof Error404Route
  '/auth/login': typeof AuthLayoutLoginIndexRoute
  '/dashboard/devices': typeof DashboardLayoutDevicesIndexRoute
  '/dashboard/notifications': typeof DashboardLayoutNotificationsIndexRoute
  '/dashboard/profile': typeof DashboardLayoutProfileIndexRoute
  '/dashboard/rules': typeof DashboardLayoutRulesIndexRoute
  '/dashboard/users': typeof DashboardLayoutUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/_layout': typeof AuthLayoutRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/_layout': typeof DashboardLayoutRouteWithChildren
  '/error/403': typeof Error403Route
  '/error/404': typeof Error404Route
  '/dashboard/_layout/': typeof DashboardLayoutIndexRoute
  '/auth/_layout/login/': typeof AuthLayoutLoginIndexRoute
  '/dashboard/_layout/devices/': typeof DashboardLayoutDevicesIndexRoute
  '/dashboard/_layout/notifications/': typeof DashboardLayoutNotificationsIndexRoute
  '/dashboard/_layout/profile/': typeof DashboardLayoutProfileIndexRoute
  '/dashboard/_layout/rules/': typeof DashboardLayoutRulesIndexRoute
  '/dashboard/_layout/users/': typeof DashboardLayoutUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/dashboard'
    | '/error/403'
    | '/error/404'
    | '/dashboard/'
    | '/auth/login'
    | '/dashboard/devices'
    | '/dashboard/notifications'
    | '/dashboard/profile'
    | '/dashboard/rules'
    | '/dashboard/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/dashboard'
    | '/error/403'
    | '/error/404'
    | '/auth/login'
    | '/dashboard/devices'
    | '/dashboard/notifications'
    | '/dashboard/profile'
    | '/dashboard/rules'
    | '/dashboard/users'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/auth/_layout'
    | '/dashboard'
    | '/dashboard/_layout'
    | '/error/403'
    | '/error/404'
    | '/dashboard/_layout/'
    | '/auth/_layout/login/'
    | '/dashboard/_layout/devices/'
    | '/dashboard/_layout/notifications/'
    | '/dashboard/_layout/profile/'
    | '/dashboard/_layout/rules/'
    | '/dashboard/_layout/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
  Error403Route: typeof Error403Route
  Error404Route: typeof Error404Route
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
  Error403Route: Error403Route,
  Error404Route: Error404Route,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/dashboard",
        "/error/403",
        "/error/404"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_layout"
      ]
    },
    "/auth/_layout": {
      "filePath": "auth/_layout.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_layout/login/"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_layout"
      ]
    },
    "/dashboard/_layout": {
      "filePath": "dashboard/_layout.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_layout/",
        "/dashboard/_layout/devices/",
        "/dashboard/_layout/notifications/",
        "/dashboard/_layout/profile/",
        "/dashboard/_layout/rules/",
        "/dashboard/_layout/users/"
      ]
    },
    "/error/403": {
      "filePath": "error/403.tsx"
    },
    "/error/404": {
      "filePath": "error/404.tsx"
    },
    "/dashboard/_layout/": {
      "filePath": "dashboard/_layout/index.tsx",
      "parent": "/dashboard/_layout"
    },
    "/auth/_layout/login/": {
      "filePath": "auth/_layout/login/index.tsx",
      "parent": "/auth/_layout"
    },
    "/dashboard/_layout/devices/": {
      "filePath": "dashboard/_layout/devices/index.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/notifications/": {
      "filePath": "dashboard/_layout/notifications/index.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/profile/": {
      "filePath": "dashboard/_layout/profile/index.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/rules/": {
      "filePath": "dashboard/_layout/rules/index.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/users/": {
      "filePath": "dashboard/_layout/users/index.tsx",
      "parent": "/dashboard/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
