/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AboutLayoutImport } from './routes/about/_layout'
import { Route as AboutLayoutIndexImport } from './routes/about/_layout/index'
import { Route as AboutLayoutReadyIndexImport } from './routes/about/_layout/ready/index'

// Create Virtual Routes

const AboutImport = createFileRoute('/about')()

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AboutLayoutRoute = AboutLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AboutRoute,
} as any)

const AboutLayoutIndexRoute = AboutLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AboutLayoutRoute,
} as any)

const AboutLayoutReadyIndexRoute = AboutLayoutReadyIndexImport.update({
  id: '/ready/',
  path: '/ready/',
  getParentRoute: () => AboutLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/about/_layout': {
      id: '/about/_layout'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLayoutImport
      parentRoute: typeof AboutRoute
    }
    '/about/_layout/': {
      id: '/about/_layout/'
      path: '/'
      fullPath: '/about/'
      preLoaderRoute: typeof AboutLayoutIndexImport
      parentRoute: typeof AboutLayoutImport
    }
    '/about/_layout/ready/': {
      id: '/about/_layout/ready/'
      path: '/ready'
      fullPath: '/about/ready'
      preLoaderRoute: typeof AboutLayoutReadyIndexImport
      parentRoute: typeof AboutLayoutImport
    }
  }
}

// Create and export the route tree

interface AboutLayoutRouteChildren {
  AboutLayoutIndexRoute: typeof AboutLayoutIndexRoute
  AboutLayoutReadyIndexRoute: typeof AboutLayoutReadyIndexRoute
}

const AboutLayoutRouteChildren: AboutLayoutRouteChildren = {
  AboutLayoutIndexRoute: AboutLayoutIndexRoute,
  AboutLayoutReadyIndexRoute: AboutLayoutReadyIndexRoute,
}

const AboutLayoutRouteWithChildren = AboutLayoutRoute._addFileChildren(
  AboutLayoutRouteChildren,
)

interface AboutRouteChildren {
  AboutLayoutRoute: typeof AboutLayoutRouteWithChildren
}

const AboutRouteChildren: AboutRouteChildren = {
  AboutLayoutRoute: AboutLayoutRouteWithChildren,
}

const AboutRouteWithChildren = AboutRoute._addFileChildren(AboutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutLayoutRouteWithChildren
  '/about/': typeof AboutLayoutIndexRoute
  '/about/ready': typeof AboutLayoutReadyIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutLayoutIndexRoute
  '/about/ready': typeof AboutLayoutReadyIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRouteWithChildren
  '/about/_layout': typeof AboutLayoutRouteWithChildren
  '/about/_layout/': typeof AboutLayoutIndexRoute
  '/about/_layout/ready/': typeof AboutLayoutReadyIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/about/' | '/about/ready'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/about/ready'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/about/_layout'
    | '/about/_layout/'
    | '/about/_layout/ready/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about",
      "children": [
        "/about/_layout"
      ]
    },
    "/about/_layout": {
      "filePath": "about/_layout.tsx",
      "parent": "/about",
      "children": [
        "/about/_layout/",
        "/about/_layout/ready/"
      ]
    },
    "/about/_layout/": {
      "filePath": "about/_layout/index.tsx",
      "parent": "/about/_layout"
    },
    "/about/_layout/ready/": {
      "filePath": "about/_layout/ready/index.tsx",
      "parent": "/about/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
